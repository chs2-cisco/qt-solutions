CMAKE_MINIMUM_REQUIRED(VERSION 2.8.4)

PROJECT(QtSingleApplication)

FIND_PACKAGE(Qt4 COMPONENTS QtCore QtNetwork QtGui REQUIRED)

INCLUDE(${QT_USE_FILE})


SET(HEADERS
	src/qtlocalpeer.h
	src/qtsingleapplication.h
	src/qtsinglecoreapplication.h
)

SET(SOURCES
	src/qtlocalpeer.cpp
	src/qtsingleapplication.cpp
	src/qtsinglecoreapplication.cpp
)

QT4_WRAP_CPP(QtSingleApplication_mocs ${HEADERS})


IF(USE_SHARED_OBJECTS)
	ADD_LIBRARY(QtSolutions_SingleApplication SHARED
	       	${SOURCES}
	       	${HEADERS}
	        ${QtSingleApplication_mocs}
	)
ELSE(USE_SHARED_OBJECTS)
	ADD_LIBRARY(QtSolutions_SingleApplication STATIC
	        ${SOURCES}
	        ${QtSingleApplication_mocs}
	)
ENDIF(USE_SHARED_OBJECTS)

ADD_DEFINITIONS(-DQT_QTSINGLEAPPLICATION_EXPORT)

#SET_TARGET_PROPERTIES(QtSolutions_SingleApplication PROPERTIES
#	COMPILE_DEFINITIONS QT_QTSINGLEAPPLICATION_EXPORT)

TARGET_LINK_LIBRARIES(QtSolutions_SingleApplication
	${QT_LIBRARIES}
)

IF(STANDALONE_EXTERN_BUILD)

	INSTALL(TARGETS QtSolutions_SingleApplication
		RUNTIME DESTINATION ${EXTERN_BIN_DIRECTORY}
		LIBRARY DESTINATION ${EXTERN_BIN_DIRECTORY}
		ARCHIVE DESTINATION ${EXTERN_LIB_DIRECTORY}
	)

ELSE(STANDALONE_EXTERN_BUILD)

	IF(USE_SHARED_OBJECTS)

		IF(UNIX AND NOT APPLE)
			INSTALL(TARGETS QtSolutions_SingleApplication
				RUNTIME DESTINATION /usr/local/movial/lib
				LIBRARY DESTINATION /usr/local/movial/lib
				)
		ELSE(UNIX AND NOT APPLE)
			INSTALL(TARGETS QtSolutions_SingleApplication
				RUNTIME DESTINATION .
				LIBRARY DESTINATION .
				)
		ENDIF(UNIX AND NOT APPLE)

	ENDIF(USE_SHARED_OBJECTS)

ENDIF(STANDALONE_EXTERN_BUILD)

